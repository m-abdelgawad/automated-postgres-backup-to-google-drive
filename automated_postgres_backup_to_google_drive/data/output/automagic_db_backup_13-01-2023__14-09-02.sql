--
-- PostgreSQL database dump
--

-- Dumped from database version 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1)
-- Dumped by pg_dump version 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: dbuser
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO dbuser;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: dbuser
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: dbuser
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO dbuser;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: dbuser
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: dbuser
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO dbuser;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: dbuser
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: dbuser
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO dbuser;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: dbuser
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO dbuser;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: dbuser
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: dbuser
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: dbuser
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO dbuser;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: dbuser
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_post; Type: TABLE; Schema: public; Owner: dbuser
--

CREATE TABLE public.blog_post (
    id bigint NOT NULL,
    title character varying(250) NOT NULL,
    slug character varying(250) NOT NULL,
    body text NOT NULL,
    publish timestamp with time zone NOT NULL,
    created timestamp with time zone NOT NULL,
    updated timestamp with time zone NOT NULL,
    status character varying(2) NOT NULL,
    featured boolean NOT NULL,
    author_id integer NOT NULL,
    cover character varying(100) NOT NULL
);


ALTER TABLE public.blog_post OWNER TO dbuser;

--
-- Name: blog_post_id_seq; Type: SEQUENCE; Schema: public; Owner: dbuser
--

ALTER TABLE public.blog_post ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_post_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: captcha_captchastore; Type: TABLE; Schema: public; Owner: dbuser
--

CREATE TABLE public.captcha_captchastore (
    id integer NOT NULL,
    challenge character varying(32) NOT NULL,
    response character varying(32) NOT NULL,
    hashkey character varying(40) NOT NULL,
    expiration timestamp with time zone NOT NULL
);


ALTER TABLE public.captcha_captchastore OWNER TO dbuser;

--
-- Name: captcha_captchastore_id_seq; Type: SEQUENCE; Schema: public; Owner: dbuser
--

ALTER TABLE public.captcha_captchastore ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.captcha_captchastore_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: dbuser
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO dbuser;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: dbuser
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: dbuser
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO dbuser;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: dbuser
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: dbuser
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO dbuser;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: dbuser
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: dbuser
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO dbuser;

--
-- Name: home_skill; Type: TABLE; Schema: public; Owner: dbuser
--

CREATE TABLE public.home_skill (
    id bigint NOT NULL,
    title character varying(250) NOT NULL,
    icon character varying(250) NOT NULL,
    description text NOT NULL,
    "order" integer NOT NULL,
    status character varying(2) NOT NULL
);


ALTER TABLE public.home_skill OWNER TO dbuser;

--
-- Name: home_skill_id_seq; Type: SEQUENCE; Schema: public; Owner: dbuser
--

ALTER TABLE public.home_skill ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.home_skill_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: portfolio_project; Type: TABLE; Schema: public; Owner: dbuser
--

CREATE TABLE public.portfolio_project (
    id bigint NOT NULL,
    title character varying(250) NOT NULL,
    slug character varying(250) NOT NULL,
    developer character varying(250) NOT NULL,
    complete_date date NOT NULL,
    skills character varying(250) NOT NULL,
    project_url character varying(250) NOT NULL,
    body text,
    publish timestamp with time zone NOT NULL,
    created timestamp with time zone NOT NULL,
    updated timestamp with time zone NOT NULL,
    status character varying(2) NOT NULL,
    featured boolean NOT NULL,
    author_id integer NOT NULL,
    category character varying(250) NOT NULL
);


ALTER TABLE public.portfolio_project OWNER TO dbuser;

--
-- Name: portfolio_project_id_seq; Type: SEQUENCE; Schema: public; Owner: dbuser
--

ALTER TABLE public.portfolio_project ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.portfolio_project_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: dbuser
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: dbuser
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: dbuser
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
25	Can add skill	7	add_skill
26	Can change skill	7	change_skill
27	Can delete skill	7	delete_skill
28	Can view skill	7	view_skill
29	Can add project	8	add_project
30	Can change project	8	change_project
31	Can delete project	8	delete_project
32	Can view project	8	view_project
33	Can add post	9	add_post
34	Can change post	9	change_post
35	Can delete post	9	delete_post
36	Can view post	9	view_post
37	Can add captcha store	10	add_captchastore
38	Can change captcha store	10	change_captchastore
39	Can delete captcha store	10	delete_captchastore
40	Can view captcha store	10	view_captchastore
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: dbuser
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
1	pbkdf2_sha256$390000$MkNXyMCxVp31wOZ3MnWKWg$nGsAntSnLZQRqBfwDsp32BSARm7d0Vs4BELrSU34o0I=	2023-01-09 10:43:50.302295+00	t	admin	Mohamed	AbdelGawad	muhammadabdelgawwad@gmail.com	t	t	2022-12-23 22:38:14+00
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: dbuser
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: dbuser
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: blog_post; Type: TABLE DATA; Schema: public; Owner: dbuser
--

COPY public.blog_post (id, title, slug, body, publish, created, updated, status, featured, author_id, cover) FROM stdin;
6	How To Stop Linux From Asking For Sudo Password?	how-to-stop-linux-from-asking-for-sudo-password	<p>When we execute commands in Linux that require the Sudo command, we are always asked to enter our Sudo password. This may get very annoying when you&#39;re&nbsp;configuring and preparing a new machine, for example.</p>\r\n\r\n<p>You can disable the Sudo password in three simple steps:</p>\r\n\r\n<p><strong>Step 1: Open the <em>Sudoers</em> file:</strong></p>\r\n\r\n<pre>\r\n<code class="language-bash">sudo nano /etc/sudoers</code></pre>\r\n\r\n<p><img alt="Open the sudoers file" src="/media/uploads/2023/01/04/2-disable-sudo-user-password-prompt-1.png" style="height:316px; width:1439px" /></p>\r\n\r\n<p><strong>Step 2: Add No-Password entries for the wanted users:</strong></p>\r\n\r\n<pre>\r\n<code>username ALL=(ALL) NOPASSWD:ALL</code></pre>\r\n\r\n<p>In the below example, I disable the Sudo password for two users: <u>root </u>and <u>mohamed</u></p>\r\n\r\n<p><img alt="disable sudo password" src="/media/uploads/2023/01/04/image-20230104171409-1.png" style="height:132px; width:675px" /></p>\r\n\r\n<p><strong>Step 3: Save and exit</strong></p>\r\n\r\n<p>Save the file with the shortcut <u>CTRL + O </u>then <u>enter</u>.</p>\r\n\r\n<p>Finally, exit the file with the shortcut<em> </em><u>CTRL + X</u></p>\r\n\r\n<p>Now the Sudo password should be disabled successfully :)</p>\r\n\r\n<p>&nbsp;</p>	2023-01-04 14:51:08+00	2023-01-04 15:20:42.01592+00	2023-01-04 21:54:35.603711+00	PB	t	1	uploads/how-to-sop-linux-from-asking-for-sudo-password.jpg
4	How to Remove Pushed Commits in Git?	how-to-remove-pushed-commits-in-git	<p>Sometimes I find myself in a situation where I have a project in a remote repository, synchronized with a local repository, and I have been making some messy committed changes. What makes it worse, I discover that I already pushed these commits to the remote repository.</p>\r\n\r\n<p>If you find yourself facing a similar situation, you can save yourself with three steps to remove these bad commits from your local and remote repositories:</p>\r\n\r\n<p><strong>Step 1: return to the last &quot;good&quot; commit</strong></p>\r\n\r\n<pre>\r\n<code class="language-bash">git reset --hard &lt;good_commit_hash&gt;</code></pre>\r\n\r\n<p><strong>Step 2: clean all uncommitted files and directories</strong></p>\r\n\r\n<pre>\r\n<code class="language-bash">git clean -f -d</code></pre>\r\n\r\n<p><strong>Step 3: force push to the remote&nbsp;repository</strong></p>\r\n\r\n<pre>\r\n<code class="language-bash">git push -f</code></pre>\r\n\r\n<p><strong><code>git push -f</code></strong>&nbsp;is short for&nbsp;<strong><code>git push --force</code></strong>. It forces a push when otherwise git would reject your&nbsp;<strong><code>git push</code></strong>&nbsp;because you changed your repo history in your pushing repository. That is only half the story. Forced pushes also let you overwrite someone else&#39;s commits which have been pushed after your last pull.</p>\r\n\r\n<p>That&#39;s it. Now you&#39;re back in time before everything is messed up :)</p>	2023-01-03 21:31:36+00	2023-01-03 21:50:36.193496+00	2023-01-08 11:40:03.598755+00	PB	t	1	uploads/how-to-remove-pushed-commits-in-git.jpg
7	How To Back up Your Self-Managed PostgreSQL Database?	how-to-back-up-your-self-managed-postgresql-database	<p>If you are running a self-managed PostgreSQL database on a Linux server, you will eventually need to back up your data.&nbsp;</p>\r\n\r\n<p>To proceed, you will need to have:</p>\r\n\r\n<ul>\r\n\t<li>A database user that&nbsp;has all&nbsp;privileges on the&nbsp;database you want to back up.</li>\r\n\t<li>&nbsp;The database name</li>\r\n</ul>\r\n\r\n<p>Now you can run the following command:</p>\r\n\r\n<pre>\r\n<code class="language-bash">PGPASSWORD="&lt;password&gt;" pg_dump -h localhost -U &lt;user&gt; &lt;db name&gt; &gt; db__$(date -d "today" +"%d_%m_%Y_%H_%M_%S").bak</code></pre>\r\n\r\n<p>You need to replace:</p>\r\n\r\n<ul>\r\n\t<li><em>&lt;password&gt;</em> with the password of the database user.</li>\r\n\t<li><em>&lt;user&gt;</em> with the database username</li>\r\n\t<li><em>&lt;db name&gt;</em> with the database name</li>\r\n</ul>\r\n\r\n<p>Optionally, you can also replace the part&nbsp;<em>db__$(date -d &quot;today&quot; +&quot;%d_%m_%Y_%H_%M&quot;).bak </em>with the desired output name.&nbsp; However, with the current setup, you get a backup file with the current timestamp.</p>\r\n\r\n<p><img alt="Dump a back up of the PostgreSQL database" src="/media/uploads/2023/01/04/dump_postgresql_database.jpg" style="height:395px; width:1453px" /></p>\r\n\r\n<p>That is it :) In the next post, let&#39;s get this inside a Bash script and schedule it to take a daily backup of our database.</p>	2023-01-04 17:26:47+00	2023-01-04 21:52:34.989065+00	2023-01-08 11:40:39.4331+00	PB	t	1	uploads/how-to-back-up-your-self-managed-postgresql-database.jpg
8	How To Enable Text Compression Using gzip And Nginx To Improve Website Performance	how-to-enable-text-compression-using-gzip-and-nginx-to-improve-website-performance	<p>I was checking my website performance on Google PageSpeed Insights when I noticed a recommendation to enable text compression.&nbsp;</p>\r\n\r\n<p>What made this looks great was the potential saving of 3.3 seconds from the page load time.</p>\r\n\r\n<p><img alt="Website performance" src="/media/uploads/2023/01/05/image-20230105224346-1.png" style="height:812px; width:1262px" /></p>\r\n\r\n<p><img alt="Metrics Recommendation " src="/media/uploads/2023/01/05/image-20230105224528-2.png" style="height:415px; width:1197px" /></p>\r\n\r\n<p>To enable text compression, it&#39;s a fairly easy step.</p>\r\n\r\n<p>Simply open the Nginx configuration file in the Nano editor:</p>\r\n\r\n<pre>\r\n<code class="language-bash">sudo nano /etc/nginx/nginx.conf</code></pre>\r\n\r\n<p>Mine had already the configurations by default, but they were commented out:</p>\r\n\r\n<p><img src="/media/uploads/2023/01/05/image-20230105225115-3.png" style="height:353px; width:1295px" /></p>\r\n\r\n<p>I simply uncommented these settings and saved the file using CTRL+o then CTRL+X.</p>\r\n\r\n<p>Finally, I restarted Nginx using the following command:</p>\r\n\r\n<pre>\r\n<code class="language-bash">sudo systemctl restart nginx</code></pre>\r\n\r\n<p>After running the speed text again on the same page, the results fascinated me!</p>\r\n\r\n<p><img src="/media/uploads/2023/01/05/image-20230105225430-4.png" style="height:815px; width:1220px" /></p>\r\n\r\n<p>That is it :) Enjoy your new website&#39;s speed :)</p>\r\n\r\n<p>&nbsp;</p>	2023-01-05 20:37:42+00	2023-01-05 20:59:57.660488+00	2023-01-07 14:59:13.023847+00	PB	t	1	uploads/how-to-enable-text-compression-using-gzip-and-nginx-to-improve-website-performance.jpg
5	How to Authenticate With GitHub From The Terminal?	how-to-authenticate-with-github-from-the-terminal	<p>Recently, I wanted to authenticate with GitHub from the terminal on a newly installed machine. The process to authenticate with GitHub using SSH requires two steps.</p>\r\n\r\n<p><strong>Step 1: Generate&nbsp;a private key file on your local machine</strong></p>\r\n\r\n<p>Inside your terminal, type the following command:</p>\r\n\r\n<pre>\r\n<code class="language-bash">ssh-keygen -t ed25519 -C "your_email@example.com"</code></pre>\r\n\r\n<p>This creates a new SSH key, using the provided email as a label.</p>\r\n\r\n<p>When you&#39;re prompted to &quot;Enter a file in which to save the key&quot;, you can press&nbsp;Enter&nbsp;to accept the default file location.</p>\r\n\r\n<pre>\r\n<code class="language-bash">&gt; Enter a file in which to save the key (/home/YourUsername/.ssh/ALGORITHM):[Press enter]</code></pre>\r\n\r\n<p>inside the path C:\\Users\\YourUsername\\.ssh, you can find the generated public and private keys.</p>\r\n\r\n<p>The public key will have the extension <span class="marker">.pub</span>, which we will use in the next step.</p>\r\n\r\n<p><strong>Step 2: Add your public key to your GitHub profile settings</strong></p>\r\n\r\n<ol>\r\n\t<li>Inside your GitHub profile, go to <strong>settings</strong> <strong>-&gt;</strong>&nbsp;<strong>SSH and GPG keys</strong>.</li>\r\n\t<li>Click&nbsp;<strong>New SSH key</strong>&nbsp;or&nbsp;<strong>Add SSH key</strong>.</li>\r\n\t<li>In the &quot;Title&quot; field, add a descriptive label for the new key. For example, if you&#39;re using a personal laptop, you might call this key &quot;Personal laptop&quot;.</li>\r\n\t<li>Paste your key into the &quot;Key&quot; field.</li>\r\n\t<li>Click&nbsp;<strong>Add SSH key</strong>.</li>\r\n</ol>\r\n\r\n<p>That&#39;s it! You can now access your remote repositories from your machine using SSH :)</p>	2023-01-03 22:17:22+00	2023-01-03 22:46:51.916819+00	2023-01-08 11:40:14.244021+00	PB	t	1	uploads/how-to-authenticate-with-github-from-git-bash.jpg
9	Week One Notes - Programming With JavaScript Course by Meta	week-one-notes-programming-with-javascript-course-by-meta	<p>I started studying <a href="https://www.coursera.org/learn/programming-with-javascript" target="_blank">Programming with JavaScript course by Meta</a>. As I always like to take notes when learning a new topic, I thought it would be good to put my notes inside blog posts and share them. Hopefully, someone will find them useful.&nbsp;&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>Kindly note that this is not my first programming language, so I won&#39;t take detailed notes. I will take notes of the details that I may need to refresh only.</p>\r\n</blockquote>\r\n\r\n<p>In this post, I included notes about:</p>\r\n\r\n<ol>\r\n\t<li>Comments in JavaScript</li>\r\n\t<li>The semi-colon in JavaScript</li>\r\n\t<li>Variables</li>\r\n\t<li>Data types</li>\r\n\t<li>Comparison Operators</li>\r\n\t<li>Logical Operators</li>\r\n\t<li>Conditionals and Loops</li>\r\n</ol>\r\n\r\n<h2>Comments in JavaScript</h2>\r\n\r\n<ol>\r\n\t<li>\r\n\t<p>Single-line comments</p>\r\n\r\n\t<pre>\r\n<code class="language-javascript">// this is a comment!</code></pre>\r\n\t</li>\r\n\t<li>\r\n\t<p>Multi-line comments</p>\r\n\r\n\t<pre>\r\n<code class="language-javascript">/*\r\nthis\r\nis\r\na\r\nmulti-line\r\ncomment\r\n*/</code></pre>\r\n\t</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>The semi-colon in JavaScript</h2>\r\n\r\n<p>Interestingly, the browser has a feature known as &quot;<strong>Automatic Semi-colon Insertion</strong>&quot; - meaning, it does a pretty good job of &quot;filling in the blanks&quot; in case there is a missing semi-colon where there should be one.</p>\r\n\r\n<p>Effectively, what that means for developers is that most of the time, it makes no difference if a semi-colon is added or not, since the browser is likely to figure it out anyway.</p>\r\n\r\n<p>That&#39;s why some developers say that you shouldn&#39;t bother with adding semi-colons at all.</p>\r\n\r\n<p>However, other developers argue that it&#39;s better to use it wherever it&#39;s needed - for clarity.</p>\r\n\r\n<p>The truth is that most of the time, you can think of adding semi-colons in JavaScript as optional - and somewhat of a stylistic preference.</p>\r\n\r\n<h2>Variables</h2>\r\n\r\n<p>To declare a variable</p>\r\n\r\n<pre>\r\n<code class="language-javascript">var petDog = 'Rex';</code></pre>\r\n\r\n<p>To update the value of a variable, you don&#39;t need to use the keyword&nbsp;<em>var&nbsp;</em>as the console is already aware of your variable:</p>\r\n\r\n<pre>\r\n<code>petDog = 'Pepper';</code></pre>\r\n\r\n<h1>Data types</h1>\r\n\r\n<p><strong>Strings </strong>must be enclosed in either <strong>single </strong>or <strong>double </strong>quotations.</p>\r\n\r\n<p>The boolean data type has two values of <strong>true </strong>and <strong>false&nbsp;</strong>(in lowercase).</p>\r\n\r\n<p>Sometimes it&#39;s necessary to know when a variable does not contain a value.&nbsp; And JavaScript has two data types to express just that.&nbsp;First, there is the <strong>null data type</strong> which only has the value null and&nbsp;represents the absence of value.&nbsp;You also have the <strong>undefined data type</strong> which can only hold the value undefined&nbsp;and usually refers to a variable that has not yet been assigned a value.</p>\r\n\r\n<p>The capabilities of JavaScript have evolved over time and version ES6&nbsp;introduced two new primitive data types to help with more complex tasks.&nbsp;One is the <strong>BigInt data type</strong> which is like an extra-large box that can&nbsp;accommodate a much greater range of numbers than the number data type.&nbsp;</p>\r\n\r\n<p>Finally, there is the <strong>symbol data type</strong> which can be used as a unique identifier.&nbsp;Think of it as having multiple boxes with the same label and&nbsp;using different serial numbers to avoid mixing them up.&nbsp;</p>\r\n\r\n<h2><strong>Comparison Operators</strong></h2>\r\n\r\n<p><img src="/media/uploads/2023/01/07/image-20230107203429-1.png" style="height:100%; width:100%" /></p>\r\n\r\n<p>There are two types of the equality operator similar to each other but behave in different ways:</p>\r\n\r\n<ol>\r\n\t<li>\r\n\t<p>The equality operator,&nbsp;==</p>\r\n\t</li>\r\n\t<li>\r\n\t<p>The strict equality operator,&nbsp;<var>===</var></p>\r\n\t</li>\r\n</ol>\r\n\r\n<p>The equality operator ==<strong>&nbsp;</strong>compares the values on the right versus the value on the left. But it ignores the data type in this comparison. For example, the following comparison will result in true:</p>\r\n\r\n<pre>\r\n<code class="language-javascript">100 == "100" // True</code></pre>\r\n\r\n<p>While the strict equality operator&nbsp;<var>===</var> checks both the values and the data types on both sides. That means, for the same previous comparison, the result will be False; because even though the values are the same, the data types are different:</p>\r\n\r\n<pre>\r\n<code class="language-javascript">100 === "100" // False</code></pre>\r\n\r\n<p>Similarly, there are two types of the inequality operator:</p>\r\n\r\n<ol>\r\n\t<li>The inequality operator, !=</li>\r\n\t<li>The strict inequality operator !==</li>\r\n</ol>\r\n\r\n<p>The inequality operator checks if two values are not the same, but it does not check against the difference in types.</p>\r\n\r\n<pre>\r\n<code class="language-javascript">5 != "5" // false</code></pre>\r\n\r\n<p>For the strict inequality operator to return <var>false</var>, the compared values have to have the same value and the same data type.</p>\r\n\r\n<pre>\r\n<code class="language-javascript"> 5 !== 5 // false</code></pre>\r\n\r\n<pre>\r\n<code class="language-javascript">5 !== "5" // true</code></pre>\r\n\r\n<p><strong>Combining strings and numbers using the&nbsp;<var>+</var>&nbsp;operator</strong></p>\r\n\r\n<p>Consider the following example:</p>\r\n\r\n<pre>\r\n<code class="language-javascript">1 + "2"</code></pre>\r\n\r\n<p>What will be the result of&nbsp;<var>1 + &quot;2&quot;</var>?</p>\r\n\r\n<p>Note that the value of&nbsp;<var>1</var>&nbsp;is of the number data type, and the value of&nbsp;<var>&quot;2&quot;</var>&nbsp;is of the string data type, so JavaScript will coerce the number&nbsp;<var>1</var>&nbsp;to a string of&nbsp;<var>&quot;1&quot;</var>, and then concatenate it with the string of&nbsp;<var>&quot;2&quot;</var>, so the result is a string of&nbsp;<var>&quot;12&quot;</var>.</p>\r\n\r\n<h2>Logical Operators</h2>\r\n\r\n<p><img src="/media/uploads/2023/01/07/image-20230107204547-1.png" style="height:100%; width:100%" /></p>\r\n\r\n<h2>Conditionals and Loops</h2>\r\n\r\n<h3>if &amp; else</h3>\r\n\r\n<pre>\r\n<code class="language-javascript">if(light == "green") {\r\n    console.log("Drive")\r\n} else if (light == "orange") {\r\n    console.log("Get ready")\r\n} else if (light == "red") {\r\n    console.log("Dont' drive")\r\n} else {\r\n    //this block will run if no condition matches\r\n    console.log("The car is not green, orange, or red");\r\n}</code></pre>\r\n\r\n<h3>switch statement</h3>\r\n\r\n<pre>\r\n<code class="language-javascript">//converting the previous if-else example with switch-case\r\nswitch(light) {\r\n   case 'green':\r\n       console.log("Drive");\r\n       break;\r\n   case 'orange':\r\n       console.log("Get ready");\r\n       break;\r\n   case 'red':\r\n       console.log("Don't drive");\r\n       break;\r\n   default:\r\n       //this block will run if no condition matches\r\n       console.log('The light is not green, orange, or red');\r\n       break;\r\n}</code></pre>\r\n\r\n<h3>for loops</h3>\r\n\r\n<pre>\r\n<code class="language-javascript">for (var i = 1; i &lt;= 5; i++) {\r\n    console.log(i);\r\n};\r\nconsole.log('Counting completed!');\r\n\r\n\r\nfor (var i = 5; i &gt; 0; i--) {\r\n    console.log(i);\r\n};\r\nconsole.log('Countdown finished!');</code></pre>\r\n\r\n<p>while loops</p>\r\n\r\n<pre>\r\n<code class="language-javascript">var i = 1;\r\nwhile (i &lt; 6) {\r\n    console.log(i);\r\n    i++;\r\n};\r\nconsole.log('Counting completed!');\r\n\r\n\r\nvar i = 5;\r\nwhile (i &gt; 0) {\r\n    console.log(i);\r\n    i = i - 1;\r\n};\r\nconsole.log('Counting completed!');</code></pre>\r\n\r\n<h3>Nested loops</h3>\r\n\r\n<p><img src="/media/uploads/2023/01/07/image-20230107235138-1.png" style="height:100%; width:100%" /></p>\r\n\r\n<pre>\r\n<code class="language-javascript">//nested loops - one inside another\r\nfor (var firstNum = 0; firstNum &lt; 2; firstNum++) {\r\n    for (var secondNum = 0; secondNum &lt; 10; secondNum++) {\r\n        console.log(firstNum + ", " + secondNum);\r\n    }\r\n}\r\n\r\n\r\n//nested loops - one inside another\r\nfor (var firstNum = 0; firstNum &lt; 2; firstNum++) {\r\n    for (var secondNum = 0; secondNum &lt; 10; secondNum++) {\r\n        console.log(firstNum + " times " + secondNum + " equals " + firstNum * secondNum);\r\n    }\r\n}</code></pre>\r\n\r\n<h2>Uses of loops</h2>\r\n\r\n<pre>\r\n<code class="language-javascript">var cubes = 'ABCDEFG';\r\n//styling console output using CSS with a %c format specifier\r\nfor (var i = 0; i &lt; cubes.length; i++) {\r\n    var styles = "font-size: 40px; border-radius: 10px; border: 1px solid blue; background: pink; color: purple";\r\n    console.log("%c" + cubes[i], styles)\r\n}</code></pre>\r\n\r\n<p>Running this simple code in the browser&#39;s console, the output in the console shows each letter on a separate line, styled like a letter cube for toddlers.</p>\r\n\r\n<p>The code itself should be mostly familiar, except for the&nbsp;<var>cubes.length</var>&nbsp;and the&nbsp;<var>cubes[i]</var>&nbsp;syntax.</p>\r\n\r\n<p>Without getting into too many details, here are both code snippets explained as simple as possible.</p>\r\n\r\n<p>The&nbsp;<var>cubes.length</var>&nbsp;returns a number. Since&nbsp;<var>cubes</var>&nbsp;is a string of characters the&nbsp;<var>cubes.length</var>&nbsp;gives me the length of the string saved in the variable.</p>\r\n\r\n<p>The second piece of code that&#39;s new here is the&nbsp;<var>cubes[i]</var>&nbsp;snippet.</p>\r\n\r\n<p>This simply targets each individual letter in the loop, based on the current value of the&nbsp;<var>i</var>&nbsp;variable.</p>\r\n\r\n<p>In other words,&nbsp;<var>cubes[i]</var>, when&nbsp;<var>i</var>&nbsp;is equal to&nbsp;<var>0</var>, is:&nbsp;<var>A</var>.</p>\r\n\r\n<p>Then,&nbsp;<var>cubes[i]</var>, when&nbsp;<var>i</var>&nbsp;is equal to&nbsp;<var>1</var>, is:&nbsp;<var>B</var>.</p>\r\n\r\n<p>This goes on for as many loops my for loop runs - and this is determined by the&nbsp;<var>cubes.length</var>&nbsp;value.</p>\r\n\r\n<p>It&#39;s also very versatile, since, if I, for example, decided to change the length of the&nbsp;<var>cubes</var>&nbsp;string, I would not have to update the condition of&nbsp;<var>i &lt; cubes.length</var>, because it gets automatically updated when I change the length of the&nbsp;<var>cubes</var>&nbsp;string.</p>\r\n\r\n<p><img alt="JavaScript loops in action" src="/media/uploads/2023/01/07/image-20230108001536-1.png" style="height:100%; width:100%" /></p>\r\n\r\n<h3>Some additional examples</h3>\r\n\r\n<p>If I&#39;m coding an email client, I will get some structured data about the emails to be displayed in the inbox, then I&#39;ll use a loop to actually display it in a nicely-formatted way.</p>\r\n\r\n<p>If I&#39;m coding an e-commerce site selling cars, I will get a source of nicely-structured data on each of the cars, then loop over that data to display it on the screen.</p>\r\n\r\n<p>If I&#39;m coding a calendar online, I&#39;ll loop over the data contained in each of the days to display a nicely-formatted calendar.</p>\r\n\r\n<h2>Exercise 1</h2>\r\n\r\n<p>In this exercise, you will create the code for a <var>for loop</var>, using the counter variable named <var>i</var> starting from <strong>1</strong>.</p>\r\n\r\n<p>To make the counter increment by 1 on each loop, you will use <var>i++</var>.</p>\r\n\r\n<p>The exit condition for the for loop should match the output given below.</p>\r\n\r\n<p>Inside the loop, write an if-else statement, which will check the following conditions:</p>\r\n\r\n<ol>\r\n\t<li>\r\n\t<p>First, it will check if the value of <em><strong>i </strong></em>is <em><strong>1</strong></em>. If it is, your code will console log the string <em><strong>&quot;Gold medal&quot;.</strong></em></p>\r\n\t</li>\r\n\t<li>\r\n\t<p>Next, I will check if the value of <em><strong>i</strong></em> is <em><strong>2</strong></em>. If it is, your code will console log the string <em><strong>&quot;Silver medal&quot;.</strong></em></p>\r\n\t</li>\r\n\t<li>\r\n\t<p>Then, your code will check if the value of <em><strong>i</strong></em> is <em><strong>3</strong></em>. If it is, it will console log the string <em><strong>&quot;Bronze medal&quot;.</strong></em></p>\r\n\t</li>\r\n\t<li>\r\n\t<p>For all the remaining values of <em><strong>i</strong></em>, your code will console log just the value of <em><strong>i</strong></em>.</p>\r\n\t</li>\r\n</ol>\r\n\r\n<h3>Exercise 1 Solution</h3>\r\n\r\n<pre>\r\n<code class="language-javascript">for (var i = 1; i &lt;= 10; i++) {\r\n    if(i == 1) {\r\n        console.log("Gold medal")\r\n    } else if (i == 2) {\r\n        console.log("Silver medal")\r\n    } else if (i == 3) {\r\n        console.log("Bronze medal")\r\n    } else {\r\n        //this block will run if no condition matches\r\n        console.log(i)\r\n    }\r\n}</code></pre>\r\n\r\n<h2>Exercise 2</h2>\r\n\r\n<p>Use the completed code from the previous task, but convert the conditionals to a switch statement.</p>\r\n\r\n<p>When you code the solution, the output in the console should remain exactly the same as in the previous question.</p>\r\n\r\n<p><strong>Note</strong>: You&#39;ll need three separate cases for the three medals, and a default case for all other values of the <var>i</var> variable.</p>\r\n\r\n<h3>Exercise 2 Solution</h3>\r\n\r\n<pre>\r\n<code class="language-javascript">for (var i = 1; i &lt;= 10; i++) {\r\n    switch(i) {\r\n        case 1:\r\n            console.log("Gold medal")\r\n            break\r\n        case 2:\r\n            console.log("Silver medal")\r\n            break\r\n        case 3:\r\n            console.log("Bronze medal")\r\n            break\r\n        default:\r\n            //this block will run if no condition matches\r\n            console.log(i)\r\n    }\r\n}</code></pre>\r\n\r\n<p>&nbsp;</p>	2023-01-07 15:04:23+00	2023-01-07 15:07:33.358562+00	2023-01-07 22:24:50.456537+00	PB	t	1	uploads/programming-with-javascript.jpg
10	Week Two Notes - Programming With JavaScript Course by Meta	week-two-notes-programming-with-javascript-course-by-meta	<p>Hello</p>	2023-01-08 08:58:48+00	2023-01-08 09:02:37.084435+00	2023-01-08 17:24:25.136647+00	DF	f	1	uploads/programming-with-javascript_gphTpTx.jpg
\.


--
-- Data for Name: captcha_captchastore; Type: TABLE DATA; Schema: public; Owner: dbuser
--

COPY public.captcha_captchastore (id, challenge, response, hashkey, expiration) FROM stdin;
55	YJQU	yjqu	334c69d58454e41e74c367b263541f4348e4a40b	2023-01-11 19:29:29.340448+00
56	YCRY	ycry	424da7263e8219af3ad2d6210f72c622cbc67ddd	2023-01-11 19:55:05.407705+00
57	FRSZ	frsz	c35165afd7adfd268f30783e4bb5f067354ba763	2023-01-11 19:55:08.18597+00
58	NSQH	nsqh	bb2ca6f84473554327418a3dcf9f66a26d0d167e	2023-01-11 19:55:14.135053+00
59	ETOI	etoi	5820f1a02721cfe073e18be492b42799b43680bd	2023-01-11 19:55:15.412695+00
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: dbuser
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2022-12-23 22:41:36.053176+00	1	Backend Automation	1	[{"added": {}}]	7	1
2	2022-12-23 22:42:01.170049+00	2	UI Automation	1	[{"added": {}}]	7	1
3	2022-12-23 22:42:32.338617+00	3	Data Analysis and Visualization	1	[{"added": {}}]	7	1
4	2022-12-23 22:43:00.615171+00	4	ETL Pipelines	1	[{"added": {}}]	7	1
5	2022-12-23 22:43:35.777177+00	5	Full Stack Web Applications	1	[{"added": {}}]	7	1
6	2022-12-23 22:44:05.987334+00	6	Web Applications Deployment	1	[{"added": {}}]	7	1
7	2022-12-23 22:48:35.793388+00	1	Elasticsearch API Automation	1	[{"added": {}}]	8	1
8	2022-12-23 22:49:33.850809+00	2	Oracle Database API Automation	1	[{"added": {}}]	8	1
9	2022-12-23 22:50:27.210746+00	3	Red Hat OpenShift API Automation	1	[{"added": {}}]	8	1
10	2022-12-24 08:43:22.051314+00	2	Oracle Database API Automation	2	[{"changed": {"fields": ["Body"]}}]	8	1
11	2022-12-24 08:49:10.626004+00	2	Oracle Database API Automation	2	[{"changed": {"fields": ["Body"]}}]	8	1
12	2022-12-24 08:51:19.846193+00	2	Oracle Database API Automation	2	[{"changed": {"fields": ["Body"]}}]	8	1
13	2022-12-24 08:58:37.719038+00	4	new project	1	[{"added": {}}]	8	1
14	2022-12-24 11:18:16.670597+00	1	admin	2	[{"changed": {"fields": ["First name", "Last name", "Email address"]}}]	4	1
15	2022-12-24 13:00:07.734404+00	4	new project	3		8	1
16	2022-12-27 09:38:36.746486+00	1	Backend Automation	2	[{"changed": {"fields": ["Order"]}}]	7	1
17	2022-12-27 09:38:51.510953+00	1	Backend Automation	2	[{"changed": {"fields": ["Order"]}}]	7	1
18	2022-12-27 10:09:32.931759+00	2	mohamed	1	[{"added": {}}]	4	1
19	2022-12-27 10:10:20.64613+00	2	mohamed	2	[{"changed": {"fields": ["User permissions"]}}]	4	1
20	2022-12-27 10:11:10.3747+00	2	mohamed	2	[{"changed": {"fields": ["password"]}}]	4	1
21	2022-12-27 10:12:11.491738+00	2	mohamed	2	[{"changed": {"fields": ["password"]}}]	4	1
22	2022-12-27 10:34:00.1907+00	2	mohamed	2	[{"changed": {"fields": ["Staff status"]}}]	4	1
23	2022-12-30 12:52:20.089853+00	3	Red Hat OpenShift API Automation	2	[{"changed": {"fields": ["Body"]}}]	8	1
24	2022-12-30 20:44:01.504076+00	1	Elasticsearch API Automation	2	[{"changed": {"fields": ["Body"]}}]	8	1
25	2022-12-31 08:35:26.731196+00	1	Elasticsearch API Automation	2	[{"changed": {"fields": ["Body"]}}]	8	1
26	2022-12-31 08:48:10.334947+00	1	Elasticsearch API Automation	2	[]	8	1
27	2022-12-31 18:19:07.629236+00	1	Elasticsearch API Automation	2	[{"changed": {"fields": ["Body"]}}]	8	1
28	2023-01-01 19:59:24.813358+00	1	Backend Automation	2	[{"changed": {"fields": ["Icon"]}}]	7	1
29	2023-01-01 19:59:25.082375+00	1	Backend Automation	2	[]	7	1
30	2023-01-01 20:01:24.589678+00	2	UI Automation	2	[{"changed": {"fields": ["Icon"]}}]	7	1
31	2023-01-01 20:02:08.086221+00	3	Data Analysis and Visualization	2	[{"changed": {"fields": ["Icon"]}}]	7	1
32	2023-01-01 20:02:36.57754+00	4	ETL Pipelines	2	[{"changed": {"fields": ["Icon"]}}]	7	1
33	2023-01-01 20:03:52.905289+00	5	Full Stack Web Applications	2	[{"changed": {"fields": ["Icon"]}}]	7	1
34	2023-01-01 20:04:14.278462+00	6	Web Applications Deployment	2	[{"changed": {"fields": ["Icon"]}}]	7	1
35	2023-01-02 16:16:36.926602+00	1	Agile Programming Doesn't Just Mean Doing More Work With Fewer People	1	[{"added": {}}]	9	1
36	2023-01-02 16:17:26.812916+00	1	Agile Programming Doesn't Just Mean Doing More Work With Fewer People	2	[]	9	1
37	2023-01-02 16:17:42.713634+00	2	Agile Programming Doesn't Just Mean Doing More Work With Fewer People	1	[{"added": {}}]	9	1
38	2023-01-02 16:18:33.226378+00	3	Agile Programming Doesn't Just Mean Doing More Work With Fewer People	1	[{"added": {}}]	9	1
39	2023-01-02 23:11:28.944405+00	1	Elasticsearch API Automation	2	[{"changed": {"fields": ["Body"]}}]	8	1
40	2023-01-03 08:41:36.304323+00	1	Elasticsearch API Automation	2	[{"changed": {"fields": ["Summary"]}}]	8	1
41	2023-01-03 16:35:54.475519+00	5	Explore US Bikeshare Data In Python	1	[{"added": {}}]	8	1
42	2023-01-03 16:38:02.953635+00	5	Explore US Bikeshare Data In Python	2	[{"changed": {"fields": ["Body"]}}]	8	1
43	2023-01-03 16:39:54.237114+00	5	Explore US Bikeshare Data In Python	2	[]	8	1
44	2023-01-03 16:43:48.473106+00	1	Elasticsearch API Automation	3		8	1
45	2023-01-03 16:43:48.47764+00	2	Oracle Database API Automation	3		8	1
46	2023-01-03 16:43:48.481873+00	3	Red Hat OpenShift API Automation	3		8	1
47	2023-01-03 16:54:00.925654+00	5	Explore US Bikeshare Data In Python	2	[{"changed": {"fields": ["Body"]}}]	8	1
48	2023-01-03 16:54:38.04939+00	5	Explore US Bikeshare Data In Python	2	[{"changed": {"fields": ["Body"]}}]	8	1
49	2023-01-03 16:59:58.713183+00	5	Explore US Bikeshare Data In Python	2	[{"changed": {"fields": ["Body"]}}]	8	1
50	2023-01-03 17:07:06.223563+00	5	Explore US Bikeshare Data In Python	2	[{"changed": {"fields": ["Category"]}}]	8	1
51	2023-01-03 17:12:57.219615+00	5	Explore US Bikeshare Data In Python	2	[{"changed": {"fields": ["Body"]}}]	8	1
52	2023-01-03 17:15:21.323325+00	5	Explore US Bikeshare Data In Python	2	[{"changed": {"fields": ["Body"]}}]	8	1
53	2023-01-03 17:28:42.961366+00	5	Explore US Bikeshare Data In Python	2	[{"changed": {"fields": ["Body"]}}]	8	1
54	2023-01-03 17:39:05.485006+00	5	Explore US Bikeshare Data In Python	2	[{"changed": {"fields": ["Body"]}}]	8	1
55	2023-01-03 19:09:04.949513+00	6	Analyze A/B Test Results	1	[{"added": {}}]	8	1
56	2023-01-03 19:18:00.088551+00	7	Use a Pre-trained Image Classifier to Identify Dog Breeds	1	[{"added": {}}]	8	1
57	2023-01-03 19:21:23.338162+00	8	Investigate European Soccer Database	1	[{"added": {}}]	8	1
58	2023-01-03 19:28:01.887481+00	9	ETL Pipeline and Data Modeling with Postgres	1	[{"added": {}}]	8	1
59	2023-01-03 19:34:41.16123+00	10	ETL Pipeline and NoSQL Data Modeling with Apache Cassandra	1	[{"added": {}}]	8	1
60	2023-01-03 19:48:59.724719+00	11	Analytical SQL Exercises	1	[{"added": {}}]	8	1
61	2023-01-03 19:52:09.347043+00	11	Analytical SQL Exercises	2	[{"changed": {"fields": ["Body"]}}]	8	1
62	2023-01-03 20:42:17.195688+00	11	Analytical SQL Exercises	2	[{"changed": {"fields": ["Body"]}}]	8	1
63	2023-01-03 21:50:36.201231+00	4	How to Remove Pushed Commits in Git?	1	[{"added": {}}]	9	1
64	2023-01-03 21:52:01.237294+00	1	Agile Programming Doesn't Just Mean Doing More Work With Fewer People	3		9	1
65	2023-01-03 21:52:01.241066+00	2	Agile Programming Doesn't Just Mean Doing More Work With Fewer People	3		9	1
66	2023-01-03 21:52:01.243632+00	3	Agile Programming Doesn't Just Mean Doing More Work With Fewer People	3		9	1
67	2023-01-03 21:53:38.241509+00	4	How to Remove Pushed Commits in Git?	2	[{"changed": {"fields": ["Body"]}}]	9	1
68	2023-01-03 22:06:06.262169+00	4	How to Remove Pushed Commits in Git?	2	[{"changed": {"fields": ["Body"]}}]	9	1
69	2023-01-03 22:07:38.137478+00	4	How to Remove Pushed Commits in Git?	2	[{"changed": {"fields": ["Body"]}}]	9	1
70	2023-01-03 22:12:35.590494+00	4	How to Remove Pushed Commits in Git?	2	[{"changed": {"fields": ["Body"]}}]	9	1
71	2023-01-03 22:23:50.31856+00	4	How to Remove Pushed Commits in Git?	2	[{"changed": {"fields": ["Body"]}}]	9	1
72	2023-01-03 22:46:51.919426+00	5	How to Authenticate With GitHub From Git Bash?	1	[{"added": {}}]	9	1
73	2023-01-03 22:47:25.487402+00	5	How to Authenticate With GitHub From The Terminal?	2	[{"changed": {"fields": ["Title", "Slug"]}}]	9	1
74	2023-01-03 22:48:44.123784+00	5	How to Authenticate With GitHub From The Terminal?	2	[{"changed": {"fields": ["Body"]}}]	9	1
75	2023-01-03 22:49:44.315437+00	5	How to Authenticate With GitHub From The Terminal?	2	[{"changed": {"fields": ["Body"]}}]	9	1
76	2023-01-04 13:50:32.316882+00	4	How to Remove Pushed Commits in Git?	2	[{"changed": {"fields": ["Body"]}}]	9	1
77	2023-01-04 14:50:55.605877+00	5	How to Authenticate With GitHub From The Terminal?	2	[{"changed": {"fields": ["Body"]}}]	9	1
78	2023-01-04 15:20:42.019505+00	6	How To Sop Linux From Asking For Sudo Password?	1	[{"added": {}}]	9	1
79	2023-01-04 15:21:52.807676+00	6	How To Sop Linux From Asking For Sudo Password?	2	[{"changed": {"fields": ["Body"]}}]	9	1
80	2023-01-04 15:22:45.306575+00	6	How To Sop Linux From Asking For Sudo Password?	2	[{"changed": {"fields": ["Body"]}}]	9	1
81	2023-01-04 17:26:22.694735+00	2	mohamed	3		4	1
82	2023-01-04 21:52:34.994797+00	7	How To Back up Your Self-Managed PostgreSQL Database?	1	[{"added": {}}]	9	1
83	2023-01-04 21:53:05.529342+00	5	How to Authenticate With GitHub From The Terminal?	2	[{"changed": {"fields": ["Featured"]}}]	9	1
84	2023-01-04 21:54:35.606361+00	6	How To Stop Linux From Asking For Sudo Password?	2	[{"changed": {"fields": ["Title", "Slug"]}}]	9	1
85	2023-01-04 21:55:21.109226+00	7	How To Back up Your Self-Managed PostgreSQL Database?	2	[{"changed": {"fields": ["Body"]}}]	9	1
86	2023-01-05 20:59:57.667034+00	8	How To Enable Text Compression Using gzip And Nginx To Improve Website Performance	1	[{"added": {}}]	9	1
87	2023-01-07 11:02:45.377629+00	1	Backend Automation	2	[{"changed": {"fields": ["Description"]}}]	7	1
88	2023-01-07 11:11:19.815079+00	1	Backend Automation	2	[{"changed": {"fields": ["Description"]}}]	7	1
89	2023-01-07 11:17:09.798359+00	2	UI Automation	2	[{"changed": {"fields": ["Description"]}}]	7	1
90	2023-01-07 11:17:37.436878+00	2	UI Automation	2	[{"changed": {"fields": ["Description"]}}]	7	1
91	2023-01-07 11:19:37.659745+00	1	Backend Automation	2	[{"changed": {"fields": ["Description"]}}]	7	1
92	2023-01-07 11:28:06.424258+00	3	Data Analysis and Visualization	2	[{"changed": {"fields": ["Description"]}}]	7	1
93	2023-01-07 11:39:34.899105+00	3	Data Analysis and Visualization	2	[{"changed": {"fields": ["Description"]}}]	7	1
94	2023-01-07 11:46:14.990227+00	4	ETL Pipelines	2	[{"changed": {"fields": ["Description"]}}]	7	1
95	2023-01-07 11:48:47.370914+00	4	ETL Pipelines	2	[{"changed": {"fields": ["Description"]}}]	7	1
96	2023-01-07 11:50:17.873278+00	4	ETL Pipelines	2	[{"changed": {"fields": ["Description"]}}]	7	1
97	2023-01-07 11:50:30.759707+00	4	ETL Pipelines	2	[{"changed": {"fields": ["Description"]}}]	7	1
98	2023-01-07 12:15:04.065823+00	5	Full Stack Web Applications	2	[{"changed": {"fields": ["Description"]}}]	7	1
99	2023-01-07 12:17:47.932919+00	1	Backend Automation	2	[{"changed": {"fields": ["Description"]}}]	7	1
100	2023-01-07 12:24:32.412503+00	6	Web Applications Deployment	2	[{"changed": {"fields": ["Description"]}}]	7	1
101	2023-01-07 13:45:15.086745+00	12	Upwork Jobs Scraper - Attended UiPath Robot	1	[{"added": {}}]	8	1
102	2023-01-07 14:59:09.19771+00	5	How to Authenticate With GitHub From The Terminal?	2	[{"changed": {"fields": ["Featured"]}}]	9	1
103	2023-01-07 14:59:13.029934+00	8	How To Enable Text Compression Using gzip And Nginx To Improve Website Performance	2	[{"changed": {"fields": ["Featured"]}}]	9	1
104	2023-01-07 15:01:16.528179+00	5	Backend Web Applications	2	[{"changed": {"fields": ["Title", "Description"]}}]	7	1
105	2023-01-07 15:01:50.695184+00	5	Backend Web Applications	2	[{"changed": {"fields": ["Description"]}}]	7	1
106	2023-01-07 15:02:29.683916+00	5	Backend Web Applications	2	[{"changed": {"fields": ["Description"]}}]	7	1
107	2023-01-07 15:02:51.127918+00	5	Backend Web Applications	2	[{"changed": {"fields": ["Description"]}}]	7	1
108	2023-01-07 15:07:33.368602+00	9	Part One - Programming With Javascript Course Notes by Meta	1	[{"added": {}}]	9	1
109	2023-01-07 16:03:30.118598+00	9	Part One - Programming With Javascript Course Notes by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
110	2023-01-07 16:06:04.638239+00	9	Part One - Programming With Javascript Course Notes by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
111	2023-01-07 16:48:23.287194+00	9	Part One - Programming With JavaScript Course Notes by Meta	2	[{"changed": {"fields": ["Title", "Body"]}}]	9	1
112	2023-01-07 16:51:28.382821+00	9	Part One - Programming With JavaScript Course Notes by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
113	2023-01-07 16:52:24.950594+00	9	Part One - Programming With JavaScript Course Notes by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
114	2023-01-07 17:33:09.845854+00	9	Part One - Programming With JavaScript Course Notes by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
115	2023-01-07 17:39:56.115561+00	9	Part One - Programming With JavaScript Course Notes by Meta	2	[]	9	1
116	2023-01-07 17:54:49.288032+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Title", "Slug", "Body"]}}]	9	1
117	2023-01-07 18:06:29.542117+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
118	2023-01-07 18:07:58.171044+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
119	2023-01-07 18:11:57.443966+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[]	9	1
120	2023-01-07 18:31:05.512658+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
121	2023-01-07 18:35:09.991983+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
122	2023-01-07 18:42:22.741318+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
123	2023-01-07 18:46:21.363242+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
124	2023-01-07 18:55:09.97428+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[]	9	1
125	2023-01-07 19:00:14.416836+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
126	2023-01-07 19:01:00.421248+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
127	2023-01-07 19:06:14.612397+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[]	9	1
128	2023-01-07 19:07:13.914528+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[]	9	1
129	2023-01-07 19:10:00.519333+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
130	2023-01-07 20:35:01.189864+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
131	2023-01-07 20:38:25.555867+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
132	2023-01-07 20:53:00.163353+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
133	2023-01-07 20:55:30.708859+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
134	2023-01-07 20:57:31.103658+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
135	2023-01-07 21:16:36.602304+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
136	2023-01-07 21:18:31.94675+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[]	9	1
137	2023-01-07 21:33:05.999603+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
138	2023-01-07 21:50:22.504794+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
139	2023-01-07 21:52:02.784935+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
140	2023-01-07 22:24:50.461283+00	9	Week One Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Body"]}}]	9	1
141	2023-01-08 09:02:37.088731+00	10	Week Two Notes - Programming With JavaScript Course by Meta	1	[{"added": {}}]	9	1
142	2023-01-08 11:40:03.605819+00	4	How to Remove Pushed Commits in Git?	2	[{"changed": {"fields": ["Body"]}}]	9	1
143	2023-01-08 11:40:14.24665+00	5	How to Authenticate With GitHub From The Terminal?	2	[]	9	1
144	2023-01-08 11:40:39.436398+00	7	How To Back up Your Self-Managed PostgreSQL Database?	2	[{"changed": {"fields": ["Body"]}}]	9	1
145	2023-01-08 11:41:20.244003+00	10	ETL Pipeline and NoSQL Data Modeling with Apache Cassandra	2	[{"changed": {"fields": ["Body"]}}]	8	1
146	2023-01-08 11:41:33.36553+00	9	ETL Pipeline and Data Modeling with Postgres	2	[{"changed": {"fields": ["Body"]}}]	8	1
147	2023-01-08 14:07:36.242559+00	10	Week Two Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Featured"]}}]	9	1
148	2023-01-08 17:24:25.139913+00	10	Week Two Notes - Programming With JavaScript Course by Meta	2	[{"changed": {"fields": ["Status"]}}]	9	1
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: dbuser
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	home	skill
8	portfolio	project
9	blog	post
10	captcha	captchastore
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: dbuser
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2022-12-23 22:36:37.74015+00
2	auth	0001_initial	2022-12-23 22:36:37.974137+00
3	admin	0001_initial	2022-12-23 22:36:38.038534+00
4	admin	0002_logentry_remove_auto_add	2022-12-23 22:36:38.052669+00
5	admin	0003_logentry_add_action_flag_choices	2022-12-23 22:36:38.067997+00
6	contenttypes	0002_remove_content_type_name	2022-12-23 22:36:38.097828+00
7	auth	0002_alter_permission_name_max_length	2022-12-23 22:36:38.113039+00
8	auth	0003_alter_user_email_max_length	2022-12-23 22:36:38.128504+00
9	auth	0004_alter_user_username_opts	2022-12-23 22:36:38.14247+00
10	auth	0005_alter_user_last_login_null	2022-12-23 22:36:38.159061+00
11	auth	0006_require_contenttypes_0002	2022-12-23 22:36:38.163953+00
12	auth	0007_alter_validators_add_error_messages	2022-12-23 22:36:38.180966+00
13	auth	0008_alter_user_username_max_length	2022-12-23 22:36:38.218712+00
14	auth	0009_alter_user_last_name_max_length	2022-12-23 22:36:38.234217+00
15	auth	0010_alter_group_name_max_length	2022-12-23 22:36:38.253171+00
16	auth	0011_update_proxy_permissions	2022-12-23 22:36:38.266805+00
17	auth	0012_alter_user_first_name_max_length	2022-12-23 22:36:38.281176+00
18	home	0001_initial	2022-12-23 22:36:38.302429+00
19	portfolio	0001_initial	2022-12-23 22:36:38.388046+00
20	sessions	0001_initial	2022-12-23 22:36:38.421789+00
21	portfolio	0002_alter_project_body	2022-12-24 08:04:11.509307+00
22	portfolio	0003_quillpost_alter_project_body	2022-12-24 08:04:11.538014+00
23	portfolio	0004_delete_quillpost_alter_project_body	2022-12-24 08:04:11.555072+00
24	portfolio	0003_alter_project_body	2022-12-24 08:38:32.572179+00
25	portfolio	0002_project_summary	2022-12-24 14:51:32.496023+00
26	blog	0001_initial	2023-01-02 14:24:19.037119+00
27	blog	0002_post_cover	2023-01-02 14:24:19.060274+00
28	portfolio	0004_remove_project_category	2023-01-03 08:51:20.093104+00
29	portfolio	0005_remove_project_summary	2023-01-03 16:47:44.19666+00
30	portfolio	0006_project_category	2023-01-03 17:06:34.195187+00
31	blog	0003_remove_post_category_remove_post_summary	2023-01-03 17:10:41.029251+00
32	captcha	0001_initial	2023-01-08 21:17:48.082688+00
33	captcha	0002_alter_captchastore_id	2023-01-08 21:17:48.091269+00
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: dbuser
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
8vbzx03cuxyjy4dlfhjs1wjs6lba3qt8	.eJxVjDkOwjAURO_iGlne_U1JnzNY3xsOIFuKkwpxdxIpBXSjeW_mTTxua_XbyIufE7kSTi6_XcD4zO0A6YHt3mnsbV3mQA-FnnTQqaf8up3u30HFUfc1ZgMYAoDBKIoqujhwXGgpQkoFilWS2z07BYZzrYCBZIGV5JiNUWvy-QLsPTeF:1p8qgG:NFxpIImSNMZZiaDHPgKVSczyDizdfAsshDDzZXM1-0Q	2023-01-06 22:38:20.194036+00
5i7nh2uc4vw4s9hc31hsjf6z5dk3dp9s	.eJxVjDkOwjAURO_iGlne_U1JnzNY3xsOIFuKkwpxdxIpBXSjeW_mTTxua_XbyIufE7kSTi6_XcD4zO0A6YHt3mnsbV3mQA-FnnTQqaf8up3u30HFUfc1ZgMYAoDBKIoqujhwXGgpQkoFilWS2z07BYZzrYCBZIGV5JiNUWvy-QLsPTeF:1p8zaX:SN7AIu2NlE09u7bGoZehNLd5Y_qhkacoCf0-7lDPB4c	2023-01-07 08:09:01.010883+00
n9nzq2jy45n17bs39b2chomvvx4cm1ei	.eJxVjDkOwjAURO_iGlne_U1JnzNY3xsOIFuKkwpxdxIpBXSjeW_mTTxua_XbyIufE7kSTi6_XcD4zO0A6YHt3mnsbV3mQA-FnnTQqaf8up3u30HFUfc1ZgMYAoDBKIoqujhwXGgpQkoFilWS2z07BYZzrYCBZIGV5JiNUWvy-QLsPTeF:1p92VZ:DvWBuq6io35111mUuYwWPgL_VZvrlxsxrw4ZxM2IUfE	2023-01-07 11:16:05.680458+00
psh67jttf0zk6gjazsz8mkvialzrj5pa	.eJxVjDkOwjAURO_iGlne_U1JnzNY3xsOIFuKkwpxdxIpBXSjeW_mTTxua_XbyIufE7kSTi6_XcD4zO0A6YHt3mnsbV3mQA-FnnTQqaf8up3u30HFUfc1ZgMYAoDBKIoqujhwXGgpQkoFilWS2z07BYZzrYCBZIGV5JiNUWvy-QLsPTeF:1pBIiD:OeFV2igW2K5AtIdam6qynRtdI5x7GxKoSzBN7m18OAM	2023-01-13 16:58:29.712435+00
6twrjg8fj8db6lky2meeek12cufvmqj0	.eJxVjDkOwjAURO_iGlne_U1JnzNY3xsOIFuKkwpxdxIpBXSjeW_mTTxua_XbyIufE7kSTi6_XcD4zO0A6YHt3mnsbV3mQA-FnnTQqaf8up3u30HFUfc1ZgMYAoDBKIoqujhwXGgpQkoFilWS2z07BYZzrYCBZIGV5JiNUWvy-QLsPTeF:1pDRr9:xlXlXjS_8OG1mZMWEHirJUFtLhOFAAgEr54yDUGi6tE	2023-01-19 15:08:35.204502+00
a09edhgg9smdzswvb69js0gfmgl0c5gi	.eJxVjDkOwjAURO_iGlne_U1JnzNY3xsOIFuKkwpxdxIpBXSjeW_mTTxua_XbyIufE7kSTi6_XcD4zO0A6YHt3mnsbV3mQA-FnnTQqaf8up3u30HFUfc1ZgMYAoDBKIoqujhwXGgpQkoFilWS2z07BYZzrYCBZIGV5JiNUWvy-QLsPTeF:1pDnIE:17CTvIpcsoHlH58A3goIF8EKJMDV_WK3itvCuAt5C6s	2023-01-20 14:01:58.079168+00
timlul013ydd153u4u3ggsdy70s0f0sy	.eJxVjDkOwjAURO_iGlne_U1JnzNY3xsOIFuKkwpxdxIpBXSjeW_mTTxua_XbyIufE7kSTi6_XcD4zO0A6YHt3mnsbV3mQA-FnnTQqaf8up3u30HFUfc1ZgMYAoDBKIoqujhwXGgpQkoFilWS2z07BYZzrYCBZIGV5JiNUWvy-QLsPTeF:1pEpd8:kzks966-pCGHea4Pe8qEUaxJu55OztniqWiRufOat0c	2023-01-23 10:43:50.307407+00
\.


--
-- Data for Name: home_skill; Type: TABLE DATA; Schema: public; Owner: dbuser
--

COPY public.home_skill (id, title, icon, description, "order", status) FROM stdin;
2	UI Automation	fa-solid fa-laptop	Develop software robots to automate routine office activities using UiPath and its Robotic Enterprise Framework.	2	PB
3	Data Analysis and Visualization	fa-solid fa-chart-line	Develop automated jobs for data gathering, cleaning, exploration, visualization, descriptive statistics, etc.	3	PB
4	ETL Pipelines	fa-solid fa-database	Develop automated ETL pipelines using Python and SQL; to extract data from a source or multiple sources, transform it as needed, and finally load it into a database.	4	PB
1	Backend Automation	fa-solid fa-gear	Automate tasks from the backend, such as emails, web scraping, etc, using Python, SQL, Bash Scripting, APIs, etc.	1	PB
6	Web Applications Deployment	fa-solid fa-server	Buy domains and Linux servers from cloud providers, set up servers, point domains, install SSL, and deploy Django web applications using Postgres, Nginx, and Gunicorn.	6	PB
5	Backend Web Applications	fa-solid fa-laptop-code	Develop fast, responsive, and secure web applications or websites from scratch using HTML, CSS, Javascript, and Bootstrap in the front end, and Django in the backend.	5	PB
\.


--
-- Data for Name: portfolio_project; Type: TABLE DATA; Schema: public; Owner: dbuser
--

COPY public.portfolio_project (id, title, slug, developer, complete_date, skills, project_url, body, publish, created, updated, status, featured, author_id, category) FROM stdin;
5	Explore US Bikeshare Data In Python	explore-us-bikeshare-data-in-python	Mohamed AbdelGawad	2021-04-03	Python | Data Cleaning | Data Analysis	https://github.com/m-abdelgawad/explore-united-states-bikeshare-data	<p>Using Python, I explored data related to bike share systems for three major cities in the United States: Chicago, New York City, and Washington. The script imports the data and answers interesting questions about it by computing descriptive statistics. It takes in raw input from the user; to create an interactive experience in the terminal to present these statistics.</p>\r\n\r\n<p dir="auto"><strong>Main Features:</strong></p>\r\n\r\n<ul dir="ltr">\r\n\t<li>Imports the data from .csv Files</li>\r\n\t<li>Cleans the data set from 3 issues: NAN values, Duplicated Rows, and Incorrect Data types</li>\r\n\t<li>Calculates The Most Frequent Times of Travel</li>\r\n\t<li>Calculates The Most Popular Stations and Trip</li>\r\n\t<li>Calculates Mean Trips Duration</li>\r\n\t<li>Calculates User Stats</li>\r\n\t<li>Prints the rows of the raw data in the terminal based on the user&#39;s choice</li>\r\n\t<li>Saves the raw data after filtering on a specific day and month, in a new .csv file</li>\r\n\t<li>Prints general information about the data set</li>\r\n\t<li>Plots different types of graphs (Bar, Scatter, Pie) on the numerical variables in the data set, and saves them in a new folder</li>\r\n</ul>\r\n\r\n<p><strong>Sample Analysis:</strong></p>\r\n\r\n<p><img alt="analysis sample" src="/media/uploads/2023/01/03/explore-us-bikeshare-data-in-python.png" style="height:100%; width:100%" /></p>	2023-01-03 16:27:24+00	2023-01-03 16:35:54.471528+00	2023-01-03 17:39:05.480047+00	PB	t	1	Data Analysis
6	Analyze A/B Test Results	analyze-ab-test-results	Mohamed AbdelGawad	2021-10-01	Python | A/B Testing | Data Analysis	https://github.com/m-abdelgawad/analyze-AB-test-results	<p dir="auto">A/B tests are very commonly performed by data analysts and data scientists.</p>\r\n\r\n<p dir="auto">For this project, I used Python to understand the results of an A/B test run by an e-commerce website.</p>\r\n\r\n<p dir="auto">The company has developed a new web page in order to try and increase the number of users who &quot;convert,&quot; meaning the number of users who decide to pay for the company&#39;s product.</p>\r\n\r\n<p dir="auto">My goal was to help the company understand if they should implement this new page, keep the old page, or perhaps run the experiment longer to make their decision.</p>	2023-01-03 19:08:35+00	2023-01-03 19:09:04.944549+00	2023-01-03 19:09:04.944568+00	PB	t	1	Data Analysis
7	Use a Pre-trained Image Classifier to Identify Dog Breeds	use-a-pre-trained-image-classifier-to-identify-dog-breeds	Mohamed AbdelGawad	2021-11-01	Python	https://github.com/m-abdelgawad/use-pre-trained-image-classifier-to-identify-dog-breeds	<p dir="auto">In this project, I tested my Python skills by working with three different pre-trained image classifiers. I wrote my own script to identify different dog breeds.</p>\r\n\r\n<p dir="auto"><strong>Project Statement</strong></p>\r\n\r\n<p dir="auto">Your city is hosting a citywide dog show and you have volunteered to help the organizing committee with contestant registration.</p>\r\n\r\n<p dir="auto">Every participant that registers must submit an image of their dog along with biographical information about their dog. The registration system tags the images based on the biographical information.</p>\r\n\r\n<p dir="auto">Some people are planning on registering pets that aren&rsquo;t actual dogs.</p>\r\n\r\n<p dir="auto">You need to use an already-developed Python classifier to make sure the participants are dogs.</p>\r\n\r\n<p dir="auto">Note, you DO NOT need to create the classifier. It will be provided to you. You will need to apply the Python tools you just learned to USE the classifier.</p>	2023-01-03 19:09:36+00	2023-01-03 19:18:00.086246+00	2023-01-03 19:18:00.086269+00	PB	t	1	Python Programming
8	Investigate European Soccer Database	investigate-european-soccer-database	Mohamed AbdelGawad	2021-12-01	Data Analysis | Python	https://github.com/m-abdelgawad/investigate-soccer-database	<p>Exploring The ultimate Soccer database for data analysis and machine learning! It contains data for soccer matches, players, and teams from several European countries from 2008 to 2016.</p>\r\n\r\n<p dir="auto"><strong>The database includes:</strong></p>\r\n\r\n<p dir="auto">+25,000 matches +10,000 players 11 European Countries with their lead championship Seasons 2008 to 2016 Players and Teams&#39; attributes* sourced from EA Sports&#39; FIFA video game series, including the weekly updates This soccer database comes from Kaggle and is well suited for data analysis and machine learning.</p>\r\n\r\n<ul dir="auto">\r\n\t<li>The database is stored in an SQLite database, and I accessed its files using the &#39;DB Browser(SQLite)&#39; software.</li>\r\n\t<li>The dataset helped me practice my SQL joins skills.</li>\r\n\t<li>Some column titles were self-explanatory, while others I had to look up on Kaggle.</li>\r\n</ul>\r\n\r\n<p dir="auto"><strong>I explored the following questions:</strong></p>\r\n\r\n<ul dir="auto">\r\n\t<li>What teams improved the most over time?</li>\r\n\t<li>Which players had the most penalties?</li>\r\n\t<li>Statistics of Players&#39; Age</li>\r\n\t<li>Does The Age of a Player Affect His Overall Rating?</li>\r\n\t<li>Statistics of Players&#39; Heights</li>\r\n\t<li>Does The height of a player Affect his Acceleration?</li>\r\n\t<li>Does The height of a player Affect his Heading Accuracy?</li>\r\n\t<li>Statistics of Players&#39; Weight in Pounds</li>\r\n\t<li>Does The weight of a player Affect his Shot Power?</li>\r\n\t<li>Does The weight of a player Affect his Shot Power?</li>\r\n</ul>	2023-01-03 19:18:21+00	2023-01-03 19:21:23.335774+00	2023-01-03 19:21:23.335788+00	PB	t	1	Data Analysis
9	ETL Pipeline and Data Modeling with Postgres	etl-pipeline-and-data-modeling-with-postgres	Mohamed AbdelGawad	2021-10-16	SQL Data Modeling | ETL Pipeline	https://github.com/m-abdelgawad/ETL-pipeline-and-data-modeling-with-Postgres	<p dir="auto">I applied what I have learned in data modeling with Postgres and built an ETL pipeline using Python. To complete the project, I defined fact and dimension tables for a star schema for a particular analytic focus and wrote an ETL pipeline that transfers data from files in two local directories into these tables in Postgres using Python and SQL.</p>	2023-01-03 19:21:42+00	2023-01-03 19:28:01.884436+00	2023-01-08 11:41:33.362575+00	PB	t	1	Data Engineering
11	Analytical SQL Exercises	analytical-sql-exercises	Mohamed AbdelGawad	2022-04-12	Analytical SQL	https://github.com/m-abdelgawad/analytical-SQL	<p dir="auto">In this project, I practiced my analytical SQL skills by solving various interview questions.</p>\r\n\r\n<p dir="auto"><strong>Q1: Suppose that we have a table that contains products, and their sales subtotals. We want to display this table, with the<span class="marker"> total previous subtotals of each product.</span></strong></p>\r\n\r\n<p dir="auto">I answered this question in a practical way, by creating a table in a local Postgres database, as follows:</p>\r\n\r\n<p dir="auto"><img alt="Table in Postgres Database" src="/media/uploads/2023/01/03/q1.png" /></p>\r\n\r\n<p dir="auto">then used the&nbsp;<code>LAG</code>&nbsp;function to get the previous subtotal, and the&nbsp;<code>SUM</code>&nbsp;function to get the total previous subtotals, for each product, as follows:</p>\r\n\r\n<p dir="auto"><img alt="The Answer Query of Question 1" src="/media/uploads/2023/01/03/q1-query.png" style="height:218px; width:864px" /></p>\r\n\r\n<p dir="auto">Which got me the results we want:</p>\r\n\r\n<p dir="auto"><strong>Q2: Suppose that we have two tables:</strong></p>\r\n\r\n<ul dir="auto">\r\n\t<li><strong>The first table contains employees and their salaries.</strong></li>\r\n</ul>\r\n\r\n<ul dir="auto">\r\n\t<li><strong>The second table contains the company departments and the employees of each department.</strong></li>\r\n</ul>\r\n\r\n<p><strong>Now, we want to know which departments have the highest salaries in the company.</strong></p>\r\n\r\n<p dir="auto">I answered this question in a practical way as well, by creating two tables in a local Postgres database, as follows:</p>\r\n\r\n<p dir="auto">First Table:</p>\r\n\r\n<p dir="auto"><img alt="First Table" src="/media/uploads/2023/01/03/q2-1.png" style="height:290px; width:135px" /></p>\r\n\r\n<p dir="auto">Second Table:</p>\r\n\r\n<p dir="auto"><img alt="Second Table" src="/media/uploads/2023/01/03/q2-2.png" style="height:286px; width:260px" /></p>\r\n\r\n<p dir="auto">then joined the two tables to answer this question, as follows:</p>\r\n\r\n<p dir="auto"><img alt="The Solution Query of Question 2" src="/media/uploads/2023/01/03/q2-query.png" style="height:113px; width:502px" /></p>\r\n\r\n<p dir="auto">Which got us the maximum salary in each department in descending order:</p>\r\n\r\n<p dir="auto"><img alt="Question 2 Solution" src="/media/uploads/2023/01/03/q2-solution.png" style="height:106px; width:157px" /></p>	2023-01-03 19:35:00+00	2023-01-03 19:48:59.721925+00	2023-01-03 20:42:17.192338+00	PB	f	1	SQL
12	Upwork Jobs Scraper - Attended UiPath Robot	upwork-jobs-scraper-attended-uipath-robot	Mohamed AbdelGawad	2022-08-03	UiPath	https://github.com/m-abdelgawad/Upwork-Jobs-Scraper-rpa-robot	<p>An attended robot that takes input from the user that represents their specialization. After that, it opens Upwork, and logs into their account, using their credentials that are saved in a credential asset in the Orchestrator. then, it searches for the opening jobs in the required specialization, scrapes the results, and filters them based on the number of proposals, and payment verification status. Finally, send the filtered results by mail to the attended user.</p>\r\n\r\n<p dir="auto"><strong>Certification</strong></p>\r\n\r\n<p dir="auto">This project was a milestone in my journey to study the RPA Developer With UiPath Nanodegree provided by Udacity.</p>\r\n\r\n<p dir="auto"><img alt="" src="/media/uploads/2023/01/07/rpa-developer-with-uipath-nanodegree.png" style="height:823px; width:1069px" /></p>	2023-01-07 13:40:48+00	2023-01-07 13:45:15.083264+00	2023-01-07 13:45:15.083287+00	PB	f	1	Robotic Process Automation (RPA)
10	ETL Pipeline and NoSQL Data Modeling with Apache Cassandra	etl-pipeline-and-nosql-data-modeling-with-apache-cassandra	Mohamed AbdelGawad	2021-10-21	NoSQL Data Modeling | ETL Pipeline	https://github.com/m-abdelgawad/ETL-pipeline-and-NoSQL-data-modeling-with-Apache-Cassandra	<p>In this project, I applied what I have learned on data modeling with Apache Cassandra and complete an ETL pipeline using Python. To complete the project, I modeled the data by creating tables in Apache Cassandra to run queries. The ETL pipeline transfers data from a set of CSV files within a directory to create a streamlined CSV file to model and insert data into Apache Cassandra tables.</p>\r\n\r\n<p><strong>Project Statement</strong></p>\r\n\r\n<p dir="auto">A startup called Sparkify wants to analyze the data they&#39;ve been collecting on songs and user activity on their new music streaming app. The analysis team is particularly interested in understanding what songs users are listening to. Currently, there is no easy way to query the data to generate the results, since the data reside in a directory of CSV files on user activity on the app.</p>\r\n\r\n<p dir="auto">They&#39;d like a data engineer to create an Apache Cassandra database that can create queries on song play data to answer the questions, and wish to bring you on the project. Your role is to create a database for this analysis. You&#39;ll be able to test your database by running queries given to you by the analytics team from Sparkify to create the results.</p>	2023-01-03 19:28:12+00	2023-01-03 19:34:41.158708+00	2023-01-08 11:41:20.240446+00	PB	t	1	Data Engineering
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: dbuser
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: dbuser
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: dbuser
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 40, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: dbuser
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: dbuser
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 2, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: dbuser
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 6, true);


--
-- Name: blog_post_id_seq; Type: SEQUENCE SET; Schema: public; Owner: dbuser
--

SELECT pg_catalog.setval('public.blog_post_id_seq', 10, true);


--
-- Name: captcha_captchastore_id_seq; Type: SEQUENCE SET; Schema: public; Owner: dbuser
--

SELECT pg_catalog.setval('public.captcha_captchastore_id_seq', 59, true);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: dbuser
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 148, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: dbuser
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 10, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: dbuser
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 33, true);


--
-- Name: home_skill_id_seq; Type: SEQUENCE SET; Schema: public; Owner: dbuser
--

SELECT pg_catalog.setval('public.home_skill_id_seq', 6, true);


--
-- Name: portfolio_project_id_seq; Type: SEQUENCE SET; Schema: public; Owner: dbuser
--

SELECT pg_catalog.setval('public.portfolio_project_id_seq', 12, true);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: blog_post blog_post_pkey; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.blog_post
    ADD CONSTRAINT blog_post_pkey PRIMARY KEY (id);


--
-- Name: blog_post blog_post_slug_key; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.blog_post
    ADD CONSTRAINT blog_post_slug_key UNIQUE (slug);


--
-- Name: captcha_captchastore captcha_captchastore_hashkey_key; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.captcha_captchastore
    ADD CONSTRAINT captcha_captchastore_hashkey_key UNIQUE (hashkey);


--
-- Name: captcha_captchastore captcha_captchastore_pkey; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.captcha_captchastore
    ADD CONSTRAINT captcha_captchastore_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: home_skill home_skill_pkey; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.home_skill
    ADD CONSTRAINT home_skill_pkey PRIMARY KEY (id);


--
-- Name: portfolio_project portfolio_project_pkey; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.portfolio_project
    ADD CONSTRAINT portfolio_project_pkey PRIMARY KEY (id);


--
-- Name: portfolio_project portfolio_project_slug_key; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.portfolio_project
    ADD CONSTRAINT portfolio_project_slug_key UNIQUE (slug);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: blog_post_author_id_dd7a8485; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX blog_post_author_id_dd7a8485 ON public.blog_post USING btree (author_id);


--
-- Name: blog_post_publish_bb7600_idx; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX blog_post_publish_bb7600_idx ON public.blog_post USING btree (publish DESC);


--
-- Name: blog_post_slug_b95473f2_like; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX blog_post_slug_b95473f2_like ON public.blog_post USING btree (slug varchar_pattern_ops);


--
-- Name: captcha_captchastore_hashkey_cbe8d15a_like; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX captcha_captchastore_hashkey_cbe8d15a_like ON public.captcha_captchastore USING btree (hashkey varchar_pattern_ops);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: portfolio_p_publish_287747_idx; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX portfolio_p_publish_287747_idx ON public.portfolio_project USING btree (publish DESC);


--
-- Name: portfolio_project_author_id_2d318685; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX portfolio_project_author_id_2d318685 ON public.portfolio_project USING btree (author_id);


--
-- Name: portfolio_project_slug_43fe0722_like; Type: INDEX; Schema: public; Owner: dbuser
--

CREATE INDEX portfolio_project_slug_43fe0722_like ON public.portfolio_project USING btree (slug varchar_pattern_ops);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_post blog_post_author_id_dd7a8485_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.blog_post
    ADD CONSTRAINT blog_post_author_id_dd7a8485_fk_auth_user_id FOREIGN KEY (author_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: portfolio_project portfolio_project_author_id_2d318685_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.portfolio_project
    ADD CONSTRAINT portfolio_project_author_id_2d318685_fk_auth_user_id FOREIGN KEY (author_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

